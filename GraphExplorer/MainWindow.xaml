<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:go="http://schemas.nwoods.com/GoXam"
        xmlns:dragdrop="clr-namespace:DragDropBehavior;assembly=DragDropBehavior"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:Custom="http://www.galasoft.ch/mvvmlight" x:Class="GraphExplorer.MainWindow"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        mc:Ignorable="d"
        xmlns:vm="clr-namespace:GraphExplorer.ViewModels"
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel, IsDesignTimeCreatable=True}"
        Title="MainWindow" WindowState="Maximized" WindowStyle="SingleBorderWindow">
    <Window.Resources>
        <!-- define a conversion from String to Color -->
        <go:StringColorConverter x:Key="theStringColorConverter" />
        <DataTemplate x:Key="NodeTemplate">
            <Grid  go:Part.SelectionAdorned="True" go:Node.ToSpot="LeftSide" go:Node.FromSpot="RightSide" >
                <!-- a NodePanel shows a background shape and places the other panel children inside the shape -->
                <go:NodePanel>
                    <!-- this shape gets the geometry defined by the NodePanel.Figure attached property -->
                    <go:NodeShape go:NodePanel.Figure="{Binding Data.Shape}" Stroke="Black" StrokeThickness="1">
                        <go:NodeShape.Fill>
                            <!-- use a fancier brush than a simple solid color -->
                            <LinearGradientBrush StartPoint="0.0 0.0" EndPoint="1.0 0.0">
                                <GradientStop Color="{Binding Data.Color, Converter={StaticResource theStringColorConverter}}" Offset="0.0" />
                                <GradientStop Color="White" Offset="0.5" />
                                <GradientStop Color="{Binding Data.Color, Converter={StaticResource theStringColorConverter}}" Offset="1.0" />
                            </LinearGradientBrush>
                        </go:NodeShape.Fill>
                    </go:NodeShape>
                    <!-- this TextBlock element is arranged inside the NodePanel’s shape -->
                    <TextBlock Text="{Binding Data.Key}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" />
                </go:NodePanel>
                <TextBlock Text="{Binding Data.Type}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,5,0,0" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="LinkTemplate">
            <go:LinkPanel go:Part.SelectionElementName="Path" go:Part.SelectionAdorned="True">
                <go:LinkShape x:Name="Path" go:LinkPanel.IsLinkShape="True" Stroke="Black" StrokeThickness="1" />
                <!-- the arrowhead -->
                <Polygon Fill="Black" Points="8,4 0,8 2,4 0,0" go:LinkPanel.Alignment="1 0.5" go:LinkPanel.Index="-1" go:LinkPanel.Orientation="Along" />
                <!-- when using a GraphLinksModel, bind to MyLinkData.Cost as a label -->
                <StackPanel Background="White">
                    <TextBlock Text="{Binding Data.Type}" Foreground="Blue" />
                </StackPanel>
            </go:LinkPanel>
        </DataTemplate>

        <DataTemplate x:Key="planetTemplateDrag">
            <DataTemplate.Resources>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Width" Value="50" />
                    <Setter Property="Height" Value="50" />
                    <Setter Property="Margin" Value="5" />
                </Style>
            </DataTemplate.Resources>
            <StackPanel>
                <TextBlock Text="{Binding .}" TextAlignment="Center" FontWeight="Bold" />
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Window.DataContext>
        <Binding Path="Main" Source="{StaticResource Locator}"/>
    </Window.DataContext>
    <Grid>
        <DockPanel>
            <Expander DockPanel.Dock="Bottom" IsExpanded="true" ExpandDirection="Up" MinWidth="400">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Command="{Binding MaterializeDataModelCommand}" Margin="3" Grid.ColumnSpan="7" Grid.Row="1">Materialize Data Models</Button>
                    <StackPanel Grid.Column="0">
                        <TextBlock Margin="3" HorizontalAlignment="Center"><Run Text="Entity Attributes (drag from schema)"/></TextBlock>
                        <ListBox ItemsSource="{Binding SelectedEntityModel.Attributes}" SelectedItem="{Binding SelectedAttribute}" Height="300" 
						dragdrop:DragDropHelper.IsDragSource="false" dragdrop:DragDropHelper.IsDropTarget="true" dragdrop:DragDropHelper.DragDropTemplate="{StaticResource planetTemplateDrag}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="KeyUp">
                                    <Custom:EventToCommand Command="{Binding KeyUpCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                    </StackPanel>
                    <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20" FontWeight="Bold"><Run Text="&lt;"/></TextBlock>
                    <StackPanel Grid.Column="2">
                        <TextBlock Margin="3" HorizontalAlignment="Center"><Run Text="Entities"/></TextBlock>
                        <DataGrid ItemsSource="{Binding EntityModels}" SelectedItem="{Binding SelectedEntityModel}" Height="300" AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn ItemsSource="{Binding Main.Fields, Source={StaticResource Locator}}"  SelectedValueBinding="{Binding TimeField}" Header="Time Field" />
                                <DataGridComboBoxColumn ItemsSource="{Binding Main.Fields, Source={StaticResource Locator}}"  SelectedValueBinding="{Binding Field}" Header="Field"/>
                                <DataGridTextColumn Binding="{Binding Name}" ClipboardContentBinding="{x:Null}" Header="Entity Name"/>
                                <DataGridTemplateColumn IsReadOnly="True" Header="Qvx">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="{Binding Main.ExportQvxCommand, Source={StaticResource Locator}}" CommandParameter="{Binding Name}" Content="Export"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="{Binding Main.RemoveItemCommand, Source={StaticResource Locator}}" CommandParameter="{Binding}" Content="X"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button Command="{Binding ApplyEntityModelsCommand}" Content="Apply"/>
                    </StackPanel>
                    <Button Command="{Binding AddEntityModelCommand}" FontSize="20" FontWeight="Bold" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5" Content="&lt;"/>
                    <StackPanel Grid.Column="4">
                        <TextBlock Margin="3"  HorizontalAlignment="Center"><Run Text="Schema"/></TextBlock>
                        <ListBox ItemsSource="{Binding Fields}"  Height="300"  SelectedItem="{Binding SelectedField}"
						dragdrop:DragDropHelper.IsDragSource="true" dragdrop:DragDropHelper.IsDropTarget="false" dragdrop:DragDropHelper.DragDropTemplate="{StaticResource planetTemplateDrag}"/>
                    </StackPanel>
                    <Button Command="{Binding AddEntityRelationModelCommand}" FontSize="20" FontWeight="Bold" Grid.Column="5" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5" Content="&gt;"/>
                    <StackPanel Grid.Column="6">
                        <TextBlock Margin="3"  HorizontalAlignment="Center"><Run Text="Relations"/></TextBlock>
                        <DataGrid ItemsSource="{Binding EntityRelationModels}" Height="300" AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn ItemsSource="{Binding Main.Fields, Source={StaticResource Locator}}"  SelectedValueBinding="{Binding From}" Header="From Field" />
                                <DataGridTextColumn Binding="{Binding Name}" Header="Relation Name"/>
                                <DataGridComboBoxColumn ItemsSource="{Binding Main.Fields, Source={StaticResource Locator}}"  SelectedValueBinding="{Binding To}" Header="To Field"/>
                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="{Binding Main.RemoveItemCommand, Source={StaticResource Locator}}" CommandParameter="{Binding}" Content="X"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <!--<ListBox ItemsSource="{Binding EntityRelationModels}"  Height="300"  ItemTemplate="{DynamicResource EntityRelationModelTemplate}"/>-->
                        <Button Command="{Binding ApplyEntityRelationModelsCommand}" Content="Apply"/>
                    </StackPanel>
                </Grid>
            </Expander>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <Button Margin="3" Command="{Binding LoadCommand}" DockPanel.Dock="Top" Content="Load All Entities"/>
                <TextBlock Margin="3" VerticalAlignment="Center"><Run Text="Username:"/></TextBlock>
                <TextBox Margin="3" VerticalAlignment="Center" Text="{Binding SearchText}" MinWidth="200" />
                <Button Margin="3" Command="{Binding SearchCommand}" DockPanel.Dock="Top" Content="Search"/>
            </StackPanel>
            <go:Diagram NodeTemplate="{StaticResource NodeTemplate}" LinkTemplate="{StaticResource LinkTemplate}" Model="{Binding GraphModel}">
                <go:Diagram.LayoutManager>
                    <go:LayoutManager AnimationTime="500" />
                </go:Diagram.LayoutManager>
                <go:Diagram.Layout>
                    <go:ForceDirectedLayout DefaultSpringLength="50" DefaultElectricalCharge="100" MaxIterations="50" />
                </go:Diagram.Layout>
            </go:Diagram>
        </DockPanel>
        <Grid Background="#55000000" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border BorderThickness="2" BorderBrush="Gray" VerticalAlignment="Center" HorizontalAlignment="Center" Height="20" Width="300" >
                <ProgressBar IsIndeterminate="{Binding IsIndeterminate}" Maximum="{Binding MaximumProgress}"  Value="{Binding Progress}" />
            </Border>
        </Grid>
    </Grid>
</Window>
